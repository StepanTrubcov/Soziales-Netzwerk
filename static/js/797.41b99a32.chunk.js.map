{"version":3,"file":"static/js/797.41b99a32.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Component/Profile/ProfileInfo/ProfileInfo.module.css?7111","Component/Profile/ProfileInfo/ProfileInfo.jsx","Component/Profile/ProfileInfo/ProfileInfoConteiner.jsx","webpack://my-app/./src/Component/Profile/MyPosts/MyPosts.module.css?36f8","Component/Profile/MyPosts/MyPosts.jsx","Component/Profile/MyPosts/MyPostsConteiner.jsx","webpack://my-app/./src/Component/Profile/Profile.module.css?c346","webpack://my-app/./src/Component/Profile/Review/Review.module.css?2752","Component/Profile/Review/Review.jsx","Component/Profile/Review/ReviewConteiner.jsx","webpack://my-app/./src/Component/Profile/NewPost/NewPost.module.css?7886","Component/Profile/NewPost/NewPost.jsx","Component/Profile/NewPost/NewPostConteiner.jsx","webpack://my-app/./src/Component/Subscriptions/Subscriptions.module.css?b820","Component/Subscriptions/Subscriptions.jsx","Component/Subscriptions/SubscriptionsConteiner.jsx","Component/Profile/Profile.jsx","Component/Profile/ProfileConteiner.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"ProfileInfo_ava__npJUe\",\"ProfileInfo\":\"ProfileInfo_ProfileInfo__Crj3O\",\"name\":\"ProfileInfo_name__6B9qi\",\"info\":\"ProfileInfo_info__tQE6T\",\"about\":\"ProfileInfo_about__A6mMR\"};","import React, { useEffect, useState } from \"react\";\nimport c from './ProfileInfo.module.css'\nimport Prelouder from \"../../common/prelouder\";\n\nconst ProfileInfo = (props) => {\n\n    const [aboutMe, setAboutMe] = useState(true)\n    const [status, setStatus] = useState(props.info.status)\n    const [avatar, setAvatar] = useState(props.profile?.photos.large);\n\n    useEffect(() => {\n        setStatus(props.info.status)\n    }, [props.info.status])\n\n    const handleAvatarClick = () => {\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = 'image/*';\n\n        fileInput.onchange = (e) => {\n            const file = e.target.files[0];\n            if (file) {\n                // Создаем временный URL для предпросмотра\n                const imageUrl = URL.createObjectURL(file);\n                setAvatar(imageUrl);\n\n                // Отправляем сам файл, а не URL\n                props.NewPhoto(file);\n            }\n        };\n\n        fileInput.click();\n    };\n\n    const addAboutMe = () => {\n        setAboutMe(true)\n        props.updateStatus(status)\n    }\n\n    if (!props.profile) {\n        return <Prelouder />\n    }\n\n    return <div className={c.name} >\n        {props.info.EditProfileWindow && (<div className={c.ProfileInfo}>\n            <div onClick={handleAvatarClick} style={{ cursor: 'pointer' }}>\n                <img\n                    className={c.ava}\n                    src={props.profile.photos.large && avatar || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5fCSweSQMzmeX5qopa0M5wAj0aUByRHPKXA&s'}\n                    alt=\"Аватар\"\n                />\n            </div>\n            <div className={c.info} >\n                <div className={c.name} >{props.profile.fullName}</div>\n                <div>Looking for a Job: {props.profile.lookingForAJob && ' Yes' || ' No'}</div>\n                <div>id: {props.profile.userId}</div>\n                <div className={c.about} >Status:{!aboutMe &&\n                    <div><input autoFocus={true} onChange={(e) => { setStatus(e.target.value) }} value={status} className={c.input} /> <button onClick={() => { addAboutMe() }} >Send</button></div> ||\n                    <div onClick={() => setAboutMe(false)} >{props.info.status && props.info.status || 'No'}</div>\n                }</div>\n            </div>\n        </div>)}\n    </div>\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport ProfileInfo from './ProfileInfo'\nimport { connect } from \"react-redux\";\nimport { addInfoActionCreator, setEditProfileWindow, getStatus, NewStatus, NewPhoto } from \"../../../redux/profile_reducer\";\nimport { compose } from \"redux\";\n\nclass ProfileInfoConteiner extends React.Component {\n\n    profileId = this.props.profileId\n\n    componentDidMount() {\n        if (!this.profileId) {\n            this.profileId = 32372\n        }\n        this.props.getStatus(this.profileId)\n    }\n\n    render() {\n        if (this.props.profile) {\n            return <ProfileInfo NewPhoto={this.props.NewPhoto} updateStatus={this.props.NewStatus} profileId={this.props.profileId} profile={this.props.profile} addInfoActionCreator={this.props.addInfoActionCreator} info={this.props.info} />\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    info: state.profile\n})\n\n\nexport default compose(connect(mapStateToProps, { NewPhoto, NewStatus, getStatus, addInfoActionCreator, setEditProfileWindow }))(ProfileInfoConteiner)","// extracted by mini-css-extract-plugin\nexport default {\"newPost\":\"MyPosts_newPost__HBpD3\",\"text\":\"MyPosts_text__-TmZ6\",\"img\":\"MyPosts_img__JpC7H\",\"MyPosts\":\"MyPosts_MyPosts__znRTt\",\"name\":\"MyPosts_name__34Eha\"};","import React, { useState } from \"react\";\nimport c from './MyPosts.module.css'\n\n\nconst MyPosts = (props) => {\n    return <div className={c.MyPosts} >\n        <div className={c.name} >\n           Posts\n        </div>\n        <div className={c.newPost} >\n            {props.Posts}\n        </div>\n    </div>\n}\n\nexport default MyPosts;","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nimport c from './MyPosts.module.css'\nimport { addPostActionCreator } from \"../../../redux/profile_reducer\";\n\nconst MyPostsConteiner = React.memo(props => {\n\n    const Post = props.newPosts.map((n) => {\n        return <div className={c.text} >\n            <div>\n                <img className={c.img} src={n.img} />\n            </div>\n            {n.text}\n        </div>\n    })\n\n    return <MyPosts addPostActionCreator={props.addPostActionCreator} Posts={Post} />\n})\n\nconst mapStateToProps = (state) => ({\n    newPosts: state.profile.postData\n})\n\nexport default connect(mapStateToProps, { addPostActionCreator })(MyPostsConteiner)","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"Profile_info__yzEzv\"};","// extracted by mini-css-extract-plugin\nexport default {\"Review\":\"Review_Review__RtIwk\",\"button\":\"Review_button__imiGb\",\"name\":\"Review_name__pQXJk\"};","import React from \"react\";\nimport c from './Review.module.css'\n\nconst Review = (props) =>{\n\n    const setNewPostWindow = () =>{\n        props.setNewPostWindow(true)\n    }\n\n    const setEditProfileWindow =()=>{\n        props.setEditProfileWindow(false)\n    }\n\n    return <div className={c.Review}>\n        <div className={c.name} >\n        Review\n        </div>\n        <div>\n        <button className={c.button} onClick={()=>{setNewPostWindow()}} >New Post</button>\n        </div>\n    </div>\n}\n\nexport default Review;","import React from \"react\";\nimport Review from './Review'\nimport { connect } from \"react-redux\";\nimport { setEditProfileWindow, setNewPostWindow } from \"../../../redux/profile_reducer\";\n\nconst ReviewConteiner = (props) => {\n    return <Review setEditProfileWindow={props.setEditProfileWindow} setNewPostWindow={props.setNewPostWindow} />\n}\n\nexport default connect(null, { setNewPostWindow, setEditProfileWindow })(ReviewConteiner);","// extracted by mini-css-extract-plugin\nexport default {\"NewPost\":\"NewPost_NewPost__WsTmZ\",\"butDiv\":\"NewPost_butDiv__7Py9E\",\"input\":\"NewPost_input__-WicA\",\"image\":\"NewPost_image__bD5J1\",\"button\":\"NewPost_button__Lh1Yu\",\"inputFile\":\"NewPost_inputFile__XIT5n\",\"info\":\"NewPost_info__XSzSO\"};","import React, { useState } from \"react\";\nimport c from './NewPost.module.css'\nimport { reduxForm, Field } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from '../../../utils/validators'\nimport { Input } from \"../../common/FormsControls/FormControls\";\n\nconst NewPost = (props) => {\n\n    const [img, setImg] = useState()\n\n    let addPost = (form) => {\n        props.addPostActionCreator(form.text, img);\n        props.setNewPostWindow(false)\n    };\n\n    const mainPhoto = (photo) => {\n        console.log(photo)\n        setImg(photo)\n    }\n\n    const setNewPostWindow = () => {\n        props.setNewPostWindow(false)\n    }\n\n    return <div className={c.NewPost} >\n        <NewPostFormRedux mainPhoto={mainPhoto} onSubmit={addPost} />\n        <button className={c.button} onClick={setNewPostWindow} >Cancellation</button>\n    </div>\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst NewPostForm = (props) => {\n    return <form className={c.butDiv} onSubmit={props.handleSubmit} >\n        <div className={c.info} >\n            <p>Text:</p><Field  validate={[requiredField, maxLength30]} className={c.input} placeholder={\"Enter your message\"} name=\"text\" component={Input} />\n            <NewPostImg mainPhoto={props.mainPhoto} />\n        </div>\n        <button className={c.button} >New Post</button>\n    </form>\n}\n\nconst NewPostFormRedux = reduxForm({\n    form: 'newPostForm'\n})(NewPostForm)\n\n\nconst NewPostImg = (props) => {\n\n    const [img, setImg] = useState(null);\n\n    const handleAvatarClick = () => {\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = 'image/*';\n\n        fileInput.onchange = (e) => {\n            const file = e.target.files[0];\n            if (file) {\n                // Создаем временный URL для предпросмотра\n                const imageUrl = URL.createObjectURL(file);\n                setImg(imageUrl);\n                props.mainPhoto(imageUrl)\n            }\n        };\n\n        fileInput.click();\n    };\n\n    return <img\n        onClick={handleAvatarClick} style={{ cursor: 'pointer', width: 70 }}\n        className={c.ava}\n        src={img && img || 'https://www.svgrepo.com/show/176893/instagram-social-media.svg'}\n    />\n}\n\nexport default NewPost;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NewPost from \"./NewPost\";\nimport { connect } from \"react-redux\";\nimport { addPostActionCreator, setNewPostWindow } from \"../../../redux/profile_reducer\";\n\nconst NewPostContainer = (props) => {\n    return <NewPost addPostActionCreator={props.addPostActionCreator} setNewPostWindow={props.setNewPostWindow} />;\n}\n\nexport default connect(null, { setNewPostWindow, addPostActionCreator })(NewPostContainer);","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"Subscriptions_ava__U6gc6\",\"name\":\"Subscriptions_name__WL7hq\",\"blok\":\"Subscriptions_blok__vO6tt\",\"Subscriptions\":\"Subscriptions_Subscriptions__b8rpk\"};","import React from \"react\";\nimport c from './Subscriptions.module.css'\n\nconst Subscriptions = (props) => {\n\n    const subscriptionsUser = props.users.map(u => {\n        if (u.followed === true) {\n            return <div className={c.blok} >\n                {u.photos.large && (<img className={c.ava} src={u.photos.large} />) || (<img className={c.ava} src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5fCSweSQMzmeX5qopa0M5wAj0aUByRHPKXA&s' />)}\n                <div className={c.name} >{u.name}</div>\n            </div>\n        }\n    })\n\n    return <div className={c.Subscriptions} >\n        Friends\n        {subscriptionsUser}\n    </div>\n}\n\nexport default Subscriptions;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Subscriptions from \"./Subscriptions\";\nimport { getUserData } from \"../../redux/subscriptions_reducer\";\n\nclass SubscriptionsConteiner extends React.Component {\n\n    componentDidMount() {\n        this.props.getUserData(this.props.correntPage, this.props.pageSize)\n    }\n\n    render() {\n        return <Subscriptions users={this.props.users} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.subscriptions.users,\n    pageSize: state.users.pageSize,\n    correntPage: state.users.correntPage,\n})\n\nexport default connect(mapStateToProps, { getUserData })(SubscriptionsConteiner)","import React, { useState } from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfoConteiner\";\nimport MyPosts from \"./MyPosts/MyPostsConteiner\";\nimport c from './Profile.module.css'\nimport ReviewConteiner from \"./Review/ReviewConteiner\";\nimport NewPostConteiner from \"./NewPost/NewPostConteiner\";\nimport SubscriptionsConteiner from '../Subscriptions/SubscriptionsConteiner'\n\nconst Profile = (props) => {\n    if (props.profileId === 32372) {\n        return <div>\n            <div className={c.info} >\n            <ProfileInfo profileId={props.profileId} profile={props.profile} />\n            <ReviewConteiner/>\n            </div>\n           {props.newPostWindow && <NewPostConteiner/>}\n            <div className={c.info}>\n            <MyPosts />\n            <SubscriptionsConteiner/>\n            </div>\n        </div>\n    } else {\n        return <div>\n            <ProfileInfo profileId={props.profileId} profile={props.profile} />\n        </div>\n    }\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from './Profile'\nimport { connect } from \"react-redux\";\nimport {\n    useLocation,\n    useNavigate,\n    useParams,\n} from \"react-router-dom\";\nimport { getProfile } from '../../redux/profile_reducer'\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileConteiner extends React.Component {\n\n    profileId = this.props.router.params.userId;\n\n    componentDidMount() {\n\n        if (!this.profileId) {\n            this.profileId = this.props.userId.userId\n        }\n\n        this.props.getProfile(this.profileId)\n    }\n\n    render() {\n        return <div>\n            <Profile {...this.props} profile={this.props.profile} profileId={this.profileId} />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile.profile,\n    newPostWindow: state.profile.newPostWindow,\n    userId: state.auth\n})\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileConteiner)"],"names":["props","_props$profile","aboutMe","setAboutMe","useState","status","setStatus","info","avatar","setAvatar","profile","photos","large","useEffect","_jsx","className","c","name","children","EditProfileWindow","_jsxs","ProfileInfo","onClick","handleAvatarClick","fileInput","document","createElement","type","accept","onchange","e","file","target","files","imageUrl","URL","createObjectURL","NewPhoto","click","style","cursor","ava","src","alt","fullName","lookingForAJob","userId","about","autoFocus","onChange","value","input","updateStatus","Prelouder","ProfileInfoConteiner","React","constructor","arguments","profileId","this","componentDidMount","getStatus","render","NewStatus","addInfoActionCreator","compose","connect","state","setEditProfileWindow","Posts","MyPostsConteiner","Post","newPosts","map","n","img","text","MyPosts","addPostActionCreator","postData","setNewPostWindow","Review","maxLength30","maxLengthCreator","NewPostFormRedux","reduxForm","form","butDiv","onSubmit","handleSubmit","Field","validate","requiredField","placeholder","component","Input","NewPostImg","mainPhoto","button","setImg","width","NewPost","photo","console","log","subscriptionsUser","users","u","followed","SubscriptionsConteiner","getUserData","correntPage","pageSize","Subscriptions","subscriptions","ReviewConteiner","newPostWindow","NewPostConteiner","ProfileConteiner","router","params","getProfile","Profile","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}